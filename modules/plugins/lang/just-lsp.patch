--- a/src/server.rs
+++ b/src/server.rs
@@ -462,8 +462,11 @@ impl Inner {
 
     if let Some(document) = self.documents.get(uri) {
       let content = document.content.to_string();
+      let filename = uri
+        .to_file_path()
+        .map_err(|()| jsonrpc::Error::invalid_params("Justfile URI was not file path"))?;
 
-      match self.format_document(&content).await {
+      match self.format_document(filename).await {
         Ok(formatted) => {
           if formatted != content {
             return Ok(Some(vec![lsp::TextEdit {
@@ -494,18 +497,10 @@ impl Inner {
     Ok(None)
   }
 
-  async fn format_document(&self, content: &str) -> Result<String> {
-    let tempdir = tempdir()?;
-
-    let file = tempdir.path().join("justfile");
-
-    fs::write(&file, content.as_bytes())?;
-
+  async fn format_document(&self, filename: PathBuf) -> Result<String> {
     let mut command = tokio::process::Command::new("just");
 
-    command.arg("--fmt").arg("--unstable").arg("--quiet");
-
-    command.current_dir(tempdir.path());
+    command.arg("--dump").arg("--justfile").arg(filename);
 
     let output = command.output().await?;
 
@@ -516,7 +511,7 @@ impl Inner {
       );
     }
 
-    Ok(fs::read_to_string(&file)?)
+    Ok(String::from_utf8(output.stdout)?)
   }
 
   async fn goto_definition(
